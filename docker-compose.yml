version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: warriors_db
    environment:
      POSTGRES_DB: warriors
      POSTGRES_USER: warrior_user
      POSTGRES_PASSWORD: warrior_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warrior_user -d warriors"]
      interval: 10s
      timeout: 5s
      retries: 5

  app1:
    build:
      context: .
    ports:
      - "8081:8080"
    container_name: java_app1
    environment:
      DB_HOST: postgres
      DB_NAME: warriors
      DB_USER: warrior_user
      DB_PASSWORD: warrior_pass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "3.0G"

  app2:
    build:
      context: .
    ports:
      - "8082:8080"
    container_name: java_app2
    environment:
      DB_HOST: postgres
      DB_NAME: warriors
      DB_USER: warrior_user
      DB_PASSWORD: warrior_pass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "3.0G"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-logs:/var/log/nginx
    depends_on:
      - app1
      - app2
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "3.0G"

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: